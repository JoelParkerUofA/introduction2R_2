[["index.html", "Introduction 2 R Chapter 1 The Prerequisites 1.1 Why use R and R Studio 1.2 Wrote by the people for the people 1.3 R has a large community 1.4 R produces high-quality graphics 1.5 Open Source", " Introduction 2 R Joel Parker 2021-05-17 Chapter 1 The Prerequisites This is an intro to R workshop for coders with little exirence. Of course all levels or R users are welcome to attend and engage in the content. In this work shop we will learn basics of the tidyverse packages. The material covered in this workshop closely follows the 2020 ResBaz intro to R course found here https://picoral.github.io/resbaz_intro_to_r/index.html 1.1 Why use R and R Studio 1.1.1 More coding, and less point and click The results in R rely on a series of well defined commands rather than just pointing and clicking. This can allow you to have a better understanding and control of the results. The steps taken in the analysis can be saved making it fast to run the analysis again. This makes statisitical analysis easily reproducible, which is important when conducting research. 1.2 Wrote by the people for the people There are 10,000 + packages that can be used in R. Packages are easy to download and implement. If you cant find a package for your specific need, then you can create your own for yourself and others to use. 1.3 R has a large community Thousands of people use R daily. Many of them are willing to help you through mailing lists and websites such as Stack Overflow. 1.4 R produces high-quality graphics packages like ggplot allow users to create high quality graphics like the one below. 1.5 Open Source Anyone can inspect the source code to see how R works. Because of this transparency, there is less chance for mistakes, and if you (or someone else) find some, you can report and fix bugs. "],["installing-r-and-r-studio.html", "Chapter 2 Installing R and R Studio 2.1 Installing R and R studio 2.2 I already have R and RStudio installed.", " Chapter 2 Installing R and R Studio If you are running your R code in your computer, you need to install both R and RStudio. Alternatively, you can create a free account at http://rstudio.cloud and run your R code in the cloud. Either way, we will be using the same IDE (i.e., RStudio). div.blue { background-color:#e6f0ff; border-radius: 5px; padding: 20px;} Whats an IDE? IDE stands for integrated development environment, and its goal is to facilitate coding by integrating a text editor, a console and other tools into one window. 2.1 Installing R and R studio Download and install R from https://cran.r-project.org Download and install RStudio from https://rstudio.com/products/rstudio/download/#download 2.2 I already have R and RStudio installed. Open RStudio Check your R version by entering sessionInfo() on your console. The latest release for R was April 24, 2020 (R version 4.0.0, 2020-04-24, Arbor Day). If your R version is older than the most recent version, please follow step 1 in the previous section to update R. Check your RStudio version, if your version is older than Version 1.2.5042, please follow step 2 in the previous section to update RStudio. "],["intro-to-r-part-ii.html", "Chapter 3 Intro to R Part II 3.1 Install tidyverse 3.2 Loading Data", " Chapter 3 Intro to R Part II 3.1 Install tidyverse For this workshop we are going to be using packages from the tidyverse. More information on tidyverse can be found here https://www.tidyverse.org/ To start download the tidyverse packages using install.packages() #install tidyverse install.packages(&quot;tidyverse&quot;) Now load the libraries # Load tidyverse library(tidyverse) Notice all of the different packages that are not available for use to use. ggplot2 tibble tidyr readr purr dplyr stringr forcats We will mostly be using the dplyr and ggplot packages. 3.2 Loading Data For this workshop we are going to be using data from the Lahman baseball database. To install the Lahman package use install.packages(Lahmen) # install lahmen data set. install.packages(&quot;Lahman&quot;) and load into your enviroment. library(Lahman) "],["dplyr.html", "Chapter 4 dplyr 4.1 Batting data. 4.2 filter 4.3 group_by 4.4 Mutate", " Chapter 4 dplyr dplyr has many usefull functions and it is not nessisary to remember all of the functions. Cheat sheets have be created to help us we get stuck. The dplyr cheat sheet can be found here: https://github.com/rstudio/cheatsheets/blob/master/data-transformation.pdf 4.1 Batting data. The Lahmen database consists of many datasets. For this we will be using the teams data set. You can load this into your enviroment with the data function. data(Teams) Check your R enviroment. You should see the Teams data loaded. Use the head function to see the first 10 rows of data. # View the first 10 rows. head(Teams,n=10) ## yearID lgID teamID franchID divID Rank G Ghome W L DivWin WCWin LgWin WSWin R AB H X2B X3B HR BB SO SB CS HBP SF RA ER ERA CG SHO SV IPouts HA HRA BBA ## 1 1871 NA BS1 BNA &lt;NA&gt; 3 31 NA 20 10 &lt;NA&gt; &lt;NA&gt; N &lt;NA&gt; 401 1372 426 70 37 3 60 19 73 16 NA NA 303 109 3.55 22 1 3 828 367 2 42 ## 2 1871 NA CH1 CNA &lt;NA&gt; 2 28 NA 19 9 &lt;NA&gt; &lt;NA&gt; N &lt;NA&gt; 302 1196 323 52 21 10 60 22 69 21 NA NA 241 77 2.76 25 0 1 753 308 6 28 ## 3 1871 NA CL1 CFC &lt;NA&gt; 8 29 NA 10 19 &lt;NA&gt; &lt;NA&gt; N &lt;NA&gt; 249 1186 328 35 40 7 26 25 18 8 NA NA 341 116 4.11 23 0 0 762 346 13 53 ## 4 1871 NA FW1 KEK &lt;NA&gt; 7 19 NA 7 12 &lt;NA&gt; &lt;NA&gt; N &lt;NA&gt; 137 746 178 19 8 2 33 9 16 4 NA NA 243 97 5.17 19 1 0 507 261 5 21 ## 5 1871 NA NY2 NNA &lt;NA&gt; 5 33 NA 16 17 &lt;NA&gt; &lt;NA&gt; N &lt;NA&gt; 302 1404 403 43 21 1 33 15 46 15 NA NA 313 121 3.72 32 1 0 879 373 7 42 ## 6 1871 NA PH1 PNA &lt;NA&gt; 1 28 NA 21 7 &lt;NA&gt; &lt;NA&gt; Y &lt;NA&gt; 376 1281 410 66 27 9 46 23 56 12 NA NA 266 137 4.95 27 0 0 747 329 3 53 ## 7 1871 NA RC1 ROK &lt;NA&gt; 9 25 NA 4 21 &lt;NA&gt; &lt;NA&gt; N &lt;NA&gt; 231 1036 274 44 25 3 38 30 53 10 NA NA 287 108 4.30 23 1 0 678 315 3 34 ## 8 1871 NA TRO TRO &lt;NA&gt; 6 29 NA 13 15 &lt;NA&gt; &lt;NA&gt; N &lt;NA&gt; 351 1248 384 51 34 6 49 19 62 24 NA NA 362 153 5.51 28 0 0 750 431 4 75 ## 9 1871 NA WS3 OLY &lt;NA&gt; 4 32 NA 15 15 &lt;NA&gt; &lt;NA&gt; N &lt;NA&gt; 310 1353 375 54 26 6 48 13 48 13 NA NA 303 137 4.37 32 0 0 846 371 4 45 ## 10 1872 NA BL1 BLC &lt;NA&gt; 2 58 NA 35 19 &lt;NA&gt; &lt;NA&gt; N &lt;NA&gt; 617 2571 753 106 31 14 29 28 53 18 NA NA 434 166 2.90 48 1 1 1548 573 3 63 ## SOA E DP FP name park attendance BPF PPF teamIDBR teamIDlahman45 teamIDretro ## 1 23 243 24 0.834 Boston Red Stockings South End Grounds I NA 103 98 BOS BS1 BS1 ## 2 22 229 16 0.829 Chicago White Stockings Union Base-Ball Grounds NA 104 102 CHI CH1 CH1 ## 3 34 234 15 0.818 Cleveland Forest Citys National Association Grounds NA 96 100 CLE CL1 CL1 ## 4 17 163 8 0.803 Fort Wayne Kekiongas Hamilton Field NA 101 107 KEK FW1 FW1 ## 5 22 235 14 0.840 New York Mutuals Union Grounds (Brooklyn) NA 90 88 NYU NY2 NY2 ## 6 16 194 13 0.845 Philadelphia Athletics Jefferson Street Grounds NA 102 98 ATH PH1 PH1 ## 7 16 220 14 0.821 Rockford Forest Citys Agricultural Society Fair Grounds NA 97 99 ROK RC1 RC1 ## 8 12 198 22 0.845 Troy Haymakers Haymakers&#39; Grounds NA 101 100 TRO TRO TRO ## 9 13 218 20 0.850 Washington Olympics Olympics Grounds NA 94 98 OLY WS3 WS3 ## 10 77 432 22 0.830 Baltimore Canaries Newington Park NA 106 102 BAL BL1 BL1 4.2 filter Typically we use what are called pipes %&gt;% to edit and manipulate data. We will start by filtering data. Lets say we were only interested in the data that was collected after 1950. We can use the filter function from dplyr to get what we want. # Check the class of the year variable class(Teams$yearID) ## [1] &quot;integer&quot; # year is stored as an integer so we will need to use integer values to filter. # data after 1950 Teams %&gt;% filter(yearID &gt; 1950) %&gt;% head() ## yearID lgID teamID franchID divID Rank G Ghome W L DivWin WCWin LgWin WSWin R AB H X2B X3B HR BB SO SB CS HBP SF RA ER ERA CG SHO SV IPouts HA ## 1 1951 AL BOS BOS &lt;NA&gt; 3 154 75 87 67 &lt;NA&gt; &lt;NA&gt; N N 804 5378 1428 233 32 127 756 594 20 21 NA NA 725 644 4.14 46 7 24 4197 1413 ## 2 1951 NL BRO LAD &lt;NA&gt; 2 158 78 97 60 &lt;NA&gt; &lt;NA&gt; N N 855 5492 1511 249 37 184 603 649 89 70 NA NA 672 613 3.88 64 10 13 4269 1360 ## 3 1951 NL BSN ATL &lt;NA&gt; 4 155 78 76 78 &lt;NA&gt; &lt;NA&gt; N N 723 5293 1385 234 37 130 565 617 80 34 NA NA 662 579 3.75 73 16 12 4167 1378 ## 4 1951 AL CHA CHW &lt;NA&gt; 4 155 78 81 73 &lt;NA&gt; &lt;NA&gt; N N 714 5378 1453 229 64 86 596 524 99 70 NA NA 644 551 3.50 74 11 14 4254 1353 ## 5 1951 NL CHN CHC &lt;NA&gt; 8 155 77 62 92 &lt;NA&gt; &lt;NA&gt; N N 614 5307 1327 200 47 103 477 647 63 30 NA NA 750 668 4.34 48 10 10 4155 1416 ## 6 1951 NL CIN CIN &lt;NA&gt; 6 155 77 68 86 &lt;NA&gt; &lt;NA&gt; N N 559 5285 1309 215 33 88 415 577 44 40 NA NA 667 571 3.70 55 14 23 4170 1357 ## HRA BBA SOA E DP FP name park attendance BPF PPF teamIDBR teamIDlahman45 teamIDretro ## 1 100 599 658 138 184 0.977 Boston Red Sox Fenway Park II 1312282 110 109 BOS BOS BOS ## 2 150 549 693 128 192 0.979 Brooklyn Dodgers Ebbets Field 1282628 102 99 BRO BRO BRO ## 3 96 595 604 145 157 0.976 Boston Braves Braves Field 487475 93 93 BSN BSN BSN ## 4 109 549 572 151 176 0.975 Chicago White Sox Comiskey Park 1328234 98 98 CHW CHA CHA ## 5 125 572 544 181 161 0.971 Chicago Cubs Wrigley Field 894415 102 104 CHC CHN CHN ## 6 119 490 584 140 141 0.977 Cincinnati Reds Crosley Field 588268 101 103 CIN CIN CIN You can use the &amp; or | opperators if multiple conditions need to be met. Lets use the filter functions to meet the following conditions yearID after 1950 franchID is equal to BOS (Boston) ## Filter with multiple conditions. Teams %&gt;% filter(yearID &gt; 1950 &amp; franchID ==&quot;BOS&quot; ) %&gt;% head() ## yearID lgID teamID franchID divID Rank G Ghome W L DivWin WCWin LgWin WSWin R AB H X2B X3B HR BB SO SB CS HBP SF RA ER ERA CG SHO SV IPouts HA ## 1 1951 AL BOS BOS &lt;NA&gt; 3 154 75 87 67 &lt;NA&gt; &lt;NA&gt; N N 804 5378 1428 233 32 127 756 594 20 21 NA NA 725 644 4.14 46 7 24 4197 1413 ## 2 1952 AL BOS BOS &lt;NA&gt; 6 154 77 76 78 &lt;NA&gt; &lt;NA&gt; N N 668 5246 1338 233 34 113 542 739 59 47 NA NA 658 579 3.80 53 7 24 4116 1332 ## 3 1953 AL BOS BOS &lt;NA&gt; 4 153 76 84 69 &lt;NA&gt; &lt;NA&gt; N N 656 5246 1385 255 37 101 496 601 33 45 NA NA 632 546 3.58 41 15 37 4119 1333 ## 4 1954 AL BOS BOS &lt;NA&gt; 4 156 79 69 85 &lt;NA&gt; &lt;NA&gt; N N 700 5399 1436 244 41 123 654 660 51 30 NA NA 728 629 4.01 41 10 22 4236 1434 ## 5 1955 AL BOS BOS &lt;NA&gt; 4 154 78 84 70 &lt;NA&gt; &lt;NA&gt; N N 755 5273 1392 241 39 137 707 733 43 17 NA NA 652 572 3.72 44 9 34 4152 1333 ## 6 1956 AL BOS BOS &lt;NA&gt; 4 155 78 84 70 &lt;NA&gt; &lt;NA&gt; N N 780 5349 1473 261 45 139 727 687 28 19 NA NA 751 648 4.17 50 8 20 4194 1354 ## HRA BBA SOA E DP FP name park attendance BPF PPF teamIDBR teamIDlahman45 teamIDretro ## 1 100 599 658 138 184 0.977 Boston Red Sox Fenway Park II 1312282 110 109 BOS BOS BOS ## 2 107 623 624 143 181 0.976 Boston Red Sox Fenway Park II 1115750 108 107 BOS BOS BOS ## 3 92 584 642 147 173 0.976 Boston Red Sox Fenway Park II 1026133 105 105 BOS BOS BOS ## 4 118 612 707 176 163 0.972 Boston Red Sox Fenway Park II 931127 111 110 BOS BOS BOS ## 5 128 582 674 136 140 0.977 Boston Red Sox Fenway Park II 1203200 110 109 BOS BOS BOS ## 6 130 668 712 169 168 0.972 Boston Red Sox Fenway Park II 1137158 113 111 BOS BOS BOS yearID after 1950 franchID is equal to BOS (Boston) or LAD (Los Angelas Dodgers). ## Filter with multiple conditions. Teams %&gt;% filter(yearID &gt; 1950 &amp; (franchID ==&quot;BOS&quot; | franchID==&quot;LAD&quot;)) %&gt;% head() ## yearID lgID teamID franchID divID Rank G Ghome W L DivWin WCWin LgWin WSWin R AB H X2B X3B HR BB SO SB CS HBP SF RA ER ERA CG SHO SV IPouts HA ## 1 1951 AL BOS BOS &lt;NA&gt; 3 154 75 87 67 &lt;NA&gt; &lt;NA&gt; N N 804 5378 1428 233 32 127 756 594 20 21 NA NA 725 644 4.14 46 7 24 4197 1413 ## 2 1951 NL BRO LAD &lt;NA&gt; 2 158 78 97 60 &lt;NA&gt; &lt;NA&gt; N N 855 5492 1511 249 37 184 603 649 89 70 NA NA 672 613 3.88 64 10 13 4269 1360 ## 3 1952 AL BOS BOS &lt;NA&gt; 6 154 77 76 78 &lt;NA&gt; &lt;NA&gt; N N 668 5246 1338 233 34 113 542 739 59 47 NA NA 658 579 3.80 53 7 24 4116 1332 ## 4 1952 NL BRO LAD &lt;NA&gt; 1 155 80 96 57 &lt;NA&gt; &lt;NA&gt; Y N 775 5266 1380 199 32 153 663 699 90 49 NA NA 603 549 3.53 45 11 24 4197 1295 ## 5 1953 AL BOS BOS &lt;NA&gt; 4 153 76 84 69 &lt;NA&gt; &lt;NA&gt; N N 656 5246 1385 255 37 101 496 601 33 45 NA NA 632 546 3.58 41 15 37 4119 1333 ## 6 1953 NL BRO LAD &lt;NA&gt; 1 155 78 105 49 &lt;NA&gt; &lt;NA&gt; Y N 955 5373 1529 274 59 208 655 686 90 47 NA NA 689 629 4.10 51 11 29 4140 1337 ## HRA BBA SOA E DP FP name park attendance BPF PPF teamIDBR teamIDlahman45 teamIDretro ## 1 100 599 658 138 184 0.977 Boston Red Sox Fenway Park II 1312282 110 109 BOS BOS BOS ## 2 150 549 693 128 192 0.979 Brooklyn Dodgers Ebbets Field 1282628 102 99 BRO BRO BRO ## 3 107 623 624 143 181 0.976 Boston Red Sox Fenway Park II 1115750 108 107 BOS BOS BOS ## 4 121 544 773 105 169 0.982 Brooklyn Dodgers Ebbets Field 1088704 102 98 BRO BRO BRO ## 5 92 584 642 147 173 0.976 Boston Red Sox Fenway Park II 1026133 105 105 BOS BOS BOS ## 6 169 509 817 118 161 0.980 Brooklyn Dodgers Ebbets Field 1163419 103 100 BRO BRO BRO 4.2.1 Challenge Use the teams data and the filter function to meet the following criteria. yearID greater than 1900 franchID equal to LAD, STL or MIN save this dataframe as plot.data. Hint: plot.data &lt;- Teams %&gt;% filter() 4.3 group_by Somtimes your data may be in different groups. Lets say we are interested in how many games per year each franchise wins. We can use group_by and Summary. ## Summarise wins per year for each team. Teams %&gt;% group_by(franchID) %&gt;% summarise(wins_per_year = mean(W)) %&gt;% head() ## `summarise()` ungrouping output (override with `.groups` argument) ## # A tibble: 6 x 2 ## franchID wins_per_year ## &lt;fct&gt; &lt;dbl&gt; ## 1 ALT 6 ## 2 ANA 78.9 ## 3 ARI 77.7 ## 4 ATH 14 ## 5 ATL 74.0 ## 6 BAL 73.3 4.4 Mutate Many times it is nessisary to create new variables or manipulate old ones. You can use the mutate function to do this. Lets create create a new variable call win_percentage Also use the select function to only look at the yearID,franchID,W,G and win_percentage Teams %&gt;% mutate(win_percentage = W/G) %&gt;% select(yearID,franchID,W,G,win_percentage) %&gt;% head() ## yearID franchID W G win_percentage ## 1 1871 BNA 20 31 0.6451613 ## 2 1871 CNA 19 28 0.6785714 ## 3 1871 CFC 10 29 0.3448276 ## 4 1871 KEK 7 19 0.3684211 ## 5 1871 NNA 16 33 0.4848485 ## 6 1871 PNA 21 28 0.7500000 4.4.1 Challenge USing the plot.data data created in the previous challenge. Use the mutate function to create the following variables Team: MIN for franchID== Min, LAD for franchID==LAD and STL for franchID==STL RunsPerGame: R/G HitsPerGame: HA/G "],["ggplot2.html", "Chapter 5 ggplot2 5.1 ggplot 5.2 Labels 5.3 Theme and Color Control", " Chapter 5 ggplot2 ggplot2 is a package to help visualize your data. There is a bit of a learning curve to understand the basics of ggplot2. However, a useful cheat sheet can be found here: https://github.com/rstudio/cheatsheets/blob/master/data-visualization-2.1.pdf. 5.1 ggplot The trick for ggplot is to start small and then add to the plot as you go. We will start with just two functions ggplot- initiates the plot aes - Aesthetic Mapping Lets plot hr by year. # Plot home runs by year step 1. ggplot(Teams, aes(x=yearID, y=HR)) Now that we have created the plot we can visualize different graph types like: geom_line() - line graph geom_bar() - bar graph geom_point() - scatter plot And many more! We can use the \\(+\\) sign to add to the graph. # Lets narrow this down to just NL and AL teams teams.plot &lt;- Teams %&gt;% filter(lgID %in% c(&quot;AL&quot;, &quot;NL&quot;) &amp; yearID &gt;1950) # Plot home runs by year step 2. ggplot(Teams, aes(x=yearID, y=HR)) + geom_point() It looks like homeruns have gone up year by year but is there a difference between the different leagues? \\ We can specify color in the aes function to color each point based on which leage that team was in. # Plot home runs by year step 3. ggplot(teams.plot, aes(x=yearID, y=HR, color=lgID)) + geom_point() 5.1.1 Challenge Using the plot.data data create a scatter plot colored by team. 5.2 Labels It is important to properly label your plots so they are easy to read and interpret. The most commonly editied labels are: xlab - x axis ylab - y axis ggtitle - plot time guides - legend title # Plot home runs by year step 4. ggplot(teams.plot, aes(x=yearID, y=HR, color=lgID)) + geom_point() + ggtitle(&quot;Homeruns Through Time&quot;, subtitle = &quot;For NL and AL Teams&quot;) + # title and subtitle xlab(&quot;Year&quot;) + ylab(&quot;Home Runs&quot;) + guides(color= guide_legend(title = &quot;League&quot;)) There are also many built in themes to make the over all plot look better. # Plot home runs by year step 5. ggplot(teams.plot, aes(x=yearID, y=HR, color= lgID)) + geom_point() + ggtitle(&quot;Homeruns Through Time&quot;, subtitle = &quot;For NL and AL Teams&quot;) + # title and subtitle xlab(&quot;Year&quot;) + ylab(&quot;Home Runs&quot;) + guides(color= guide_legend(title = &quot;League&quot;)) + theme_bw() # theme to make the plot look good. 5.2.1 Challenge Add to the plot created in the last section by: * Changing legend theme to Team * Changing x label to Year * Changing Y label to Runs per Game * Change title to: Runs per Game * Change subtitle to By Team 5.3 Theme and Color Control You can manually play with the theme of the graph using the theme() function. You can also choose the colors on the graph with the scale_color_manual function. # Plot with the visuals of the graph. ggplot(teams.plot, aes(x=yearID, y=HR, color= lgID)) + geom_point() + ggtitle(&quot;Homeruns Through Time&quot;, subtitle = &quot;For NL and AL Teams&quot;) + # title and subtitle xlab(&quot;Year&quot;) + ylab(&quot;Home Runs&quot;) + guides(color= guide_legend(title = &quot;League&quot;)) + theme_bw()+ # theme to make the plot look good. scale_color_manual(values = c(&quot;red&quot;,&quot;blue&quot;)) + # Make NL blue and AL red theme(plot.title = element_text(hjust = 0.5, # Centers title face = &quot;bold&quot;, color = &quot;Red&quot;), # Makes title bold plot.subtitle = element_text(hjust = 0.5, # Centers subtitle color = &quot;Blue&quot;), axis.title = element_text(color = &quot;Red&quot;), # Change colors of axis title axis.text = element_text(color = &quot;Blue&quot;), # Change color of axis legend.title = element_text(color = &quot;Red&quot;, face = &quot;bold&quot;) # Change color of legend title ) 5.3.1 Challenge Take a few min to get the visuals just the want them in the plot from the previous challenge. Use the theme() function and the scale_color_manual() to play with different color combinations. "],["challenge-comparison.html", "Chapter 6 Challenge Comparison", " Chapter 6 Challenge Comparison By now if you have completed all of the challenges you should have something that looks like: library(dplyr) library(forcats) library(magrittr) ## Filter data for the necissary variables. plot.data &lt;- Teams %&gt;% filter(franchID %in% c(&quot;LAD&quot;, &quot;STL&quot;, &quot;MIN&quot;) &amp; yearID &gt; 1900) %&gt;% mutate(Team = as.character(franchID)) %&gt;% mutate(RunsPerGame = R / G) %&gt;% mutate(HitsPerGame = HA / G) ## Plot ggplot(data = plot.data, aes(yearID,RunsPerGame)) + theme_bw()+ geom_point(aes(color =Team)) + xlab(&quot;Year&quot;) + ylab(&quot;Runs per game&quot;) + ggtitle(&quot;Runs per Game&quot;, subtitle = &quot;By Team&quot;) + theme(plot.title = element_text(hjust = 0.5, face = &quot;bold&quot;), plot.subtitle = element_text(hjust= 0.5)) + scale_color_manual(values = c(&quot;blue&quot;,&quot;darkgreen&quot;,&quot;red&quot;)) One issue with this plot is we cant tell during with years with team scored the most runs per game. We can add geom_smooth to help. ggplot(data = plot.data, aes(yearID,RunsPerGame)) + theme_bw()+ geom_point(aes(color =Team)) + geom_smooth(aes(color=Team)) + # Creates a smooth line to see which team scored the most runs per game from year to year. xlab(&quot;Year&quot;) + ylab(&quot;Runs per game&quot;) + ggtitle(&quot;Runs per Game&quot;, subtitle = &quot;By Team&quot;) + theme(plot.title = element_text(hjust = 0.5, face = &quot;bold&quot;), plot.subtitle = element_text(hjust= 0.5)) + scale_color_manual(values = c(&quot;blue&quot;,&quot;darkgreen&quot;,&quot;red&quot;)) ## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39; "],["q-and-a.html", "Chapter 7 Q and A", " Chapter 7 Q and A Please think about why you came to this workshop and what you were hoping to get out of it. What are you planning to use R for in the future? Lets have an open discussion about new topics we may have not discussed yet. "]]
